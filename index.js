/*
const numbers = [5, 8, -1, '-6', 11, 'ololo', '-2']
let sum = 0
for (let i = 0; i < numbers.length; i++) {
  sum += numbers[i]
}

alert('Sum is ' + sum)
*/

/*
1)дано масив numbers з рядків та чисел.
2)ініціалізуємо змінну sum з початковим значенням 0.
3)на кожній ітерації поточний елемент масиву numbers[i] додається до змінної sum.
4)програма перестає коректно рахувати суму чисел на ітерації, коли зустрічається рядок '-6'/  та ми получимо
  повідомленння через функцію alert неправильне значення 12-611ololo-2
  причина в тому що оператор + використовується як для математичного додавання так і для конкатинації
  рядків,так як тут є рядки то відбувається конкатинація.
5)щоб виправити таку помилку використовується умова typeof numbers[i] === 'number' 
  для перевірки типу елемента,якщо елемент є рядковим значенням, перетворюємо його на число за допомогою parseInt()
  щоб додати його до суми.
*/

const numbers = [5, 8, -1, '-6', 11, 'ololo', '-2'];
let sum = 0;

for (let i = 0; i < numbers.length; i++) {
  if (typeof numbers[i] === 'number' || !isNaN(parseInt(numbers[i]))) {
    sum += parseInt(numbers[i]);
  }
}

alert('Sum is ' + sum);

/*
6)тепер ми отримаємо в alert правильну суму чисел яка дорівнює числу 15
*/